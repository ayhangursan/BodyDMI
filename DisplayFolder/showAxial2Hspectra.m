function showAxial2Hspectra(inputFID,FH,ppm_axis)
% showAxial2Hspectra displays the axial 2H spectra.
%
% Inputs:
%   - inputFID: The input FID data. It should be a 4D array.
%   - FH: The frequency index.
%   - ppm_axis: The ppm axis values.

% Example:
%   inputFID = rand(100, 10, 10, 2);
%   FH = 1;
%   ppm_axis = linspace(-10, 10, 100);
%   showAxial2Hspectra(inputFID, FH, ppm_axis)
%
if ~isequal(size(inputFID,1),numel(ppm_axis))
    inputFID=padarray(inputFID,[(numel(ppm_axis)-size(inputFID,1)) 0 0 0],0,'post');
end
SPECTRA=fftshift(fft(inputFID(:,:,:,FH),[],1),1);
specmax=max(real(SPECTRA),[],'all');
% zlimitwindow=find(ppm_axis>0 & ppm_axis<10);
% zlimitwindow=find(ppm_axis>-20 & ppm_axis<20);% For 31 P
zlimitwindow=find(ppm_axis>0 & ppm_axis<10);% For 2H

specmin=1.2*min(real(SPECTRA(zlimitwindow,:,:)),[],'all');

% specmax=2e2;disp(['Vertical window is set manually. Max:',num2str(specmax)]) % Modify this line in case predefined ylimits are needed!
% specmin=-1e2;disp(['Vertical window is set manually. Min:',num2str(specmin)])

nkx=size(SPECTRA,2);
nky=size(SPECTRA,3);

figure('color','w','WindowState','maximized')
for idx_iy = 1:nky
    for idx_ix = 1:nkx
        im_spectra = double(real(SPECTRA(:,idx_ix, idx_iy)));
        
        hAxe = axes(...
            'Parent'    , gcf                        , ...
            'Box'       , 'on'                       , ...
            'LineWidth' , 4                          , ...
            'Position'  , [(idx_iy-1)*1/nky, 1-(idx_ix*1/nkx), 1/nky, 1/nkx], ...
            'XDir'      , 'reverse'                  , ...
            'XTick'     , []                         , ...%'XTick'     , [0 2 4 6 8 10]
            'YTick'     , []                         , ...
            'XTickLabel', {''; ''}                   , ...
            'YTickLabel', {''; ''}                   , ...
            'TickDir'   , 'out'                      , ...
            'Ylim'      , [specmin specmax*1.15]     , ...
            'XLim'      , [0 10]                     ,...
            'XColor'    , [1 0 0]                    ,...
            'YColor'    , [1 0 0]                    ,...
            'Color'     , [0 0 0]);
        hLine = line( ...
            'Parent', hAxe            , ...
            'XData' , ppm_axis        , ...
            'YData' , im_spectra      , ...
            'Linewidth', 1.25         , ...
            'Color',[0 1 0]);


    end
end
end
